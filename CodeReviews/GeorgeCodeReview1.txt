Author of code review: Erin George
Date of Code Review: 9/27/2016
Sprint Number: 1
Name of the file: CrouchingMario.cs
Author of file: Ricky (with some help from John)
Code Quality: Good use of implementation/inheritance. By using MarioActionState, your file will already have the actionState and marioEntity. This is really helpful so that you can use the same actionState and marioEntity throughout all of the Mario states. This makes the code easier to read and makes it more clean.  However, when looking into the code I realized that there is a MarioActionState.cs file and a MarioActionStates.cs file. These names are really similar so that can cause some confusion. However, since you only end up using MarioActionState.cs in this file, it is not too bad. The methods are short and are easy to read. In order to get your code cleaner at the top, you do not need to include the files that you do not end up using in this class. Overall the method is written well and it looks like it would be able to be edited easily. On a side note, even though this is not in your file, your file uses the code from MarioActionState.cs, so I thought I would comment about one big thing I saw in that file too. In the Begin() method, you use marioEntity.mSprite.changeActionState(actionState). Is there a way to shorten this in order to use less chaining? This will help with readability as well as help with making changes in the future.  
Time to write review: 30 min
Hypothetical change: One thing we will need to make sure to check is whether or not normal Mario can crouch. I have been told that he can only crouch when in a power-up mode. If this is true, then a check will have to be added in the CrouchingMario.cs file. This should be added in the constructor method, and this change would be easy to make with how your code is set up. 